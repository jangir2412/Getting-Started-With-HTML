

Q1


Ans:     // Creating a new Map
let myMap = new Map();

// 1️⃣ Add key-value pairs to the Map
myMap.set("name", "Akshay");
myMap.set("age", 25);
myMap.set("city", "Jaipur");

console.log("Map after adding key-value pairs:", myMap);

// 2️⃣ Check if a specific key exists,
let hasAge = myMap.has("age");
console.log("Does 'age' key exist?", hasAge); // true

// 3️⃣ Retrieve the value associated with a given key,
let cityValue = myMap.get("city");
console.log("Value for 'city':", cityValue); // Jaipur

// 4️⃣ Iterate through all key-value pairs
console.log("Iterating through Map:");
myMap.forEach((value, key) => {
    console.log(`${key} → ${value}`);
});


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Q2

Ans:     // Creating a Map to store contact information
let contacts = new Map();

// Adding contact details (name as key, object as value)
contacts.set("Akshay", { age: 25, email: "akshay@example.com", location: "Jaipur" });
contacts.set("Rohit", { age: 30, email: "rohit@example.com", location: "Delhi" });
contacts.set("Priya", { age: 28, email: "priya@example.com", location: "Mumbai" });

// Function to retrieve contact details by name
function getContactDetails(name) {
    if (contacts.has(name)) {
        let contact = contacts.get(name);
        console.log(`Contact Details for ${name}:`);
        console.log(`Age: ${contact.age}`);
        console.log(`Email: ${contact.email}`);
        console.log(`Location: ${contact.location}`);
    } else {
        console.log(`No contact found with the name "${name}".`);
    }
}

// Example usage
getContactDetails("Akshay");
getContactDetails("Priya");
getContactDetails("John"); // Not in map



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++




Q3


Ans:     // Existing array
let myArray = [1, 2, 3];

// Function to add any number of arguments to the existing array
function addToArray(...newElements) {
    myArray = [...myArray, ...newElements]; // spread both arrays
}

// Example usage
addToArray(4, 5, 6);
console.log(myArray); // Output: [1, 2, 3, 4, 5, 6]

addToArray(7, 8);
console.log(myArray); // Output: [1, 2, 3, 4, 5, 6, 7, 8]




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++




Q4



Ans:     // Creating car object
let car = {
    brand: "Toyota",
    model: "Corolla",
    displayDetails: function() {
        console.log(`Brand: ${this.brand}, Model: ${this.model}`);
    }
};

// Testing the method
car.displayDetails(); // Output: Brand: Toyota, Model: Corolla

// Changing properties and testing again
car.brand = "Honda";
car.model = "Civic";
car.displayDetails(); // Output: Brand: Honda, Model: Civic




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++





Q5



Ans:      // Creating person1 and person2 objects
let person1 = {
    name: "Akshay",
    age: 25
};

let person2 = {
    name: "Rohit",
    age: 30
};

// Function to introduce a person
function introduce() {
    console.log(`Hello, I'm ${this.name}, and I'm ${this.age} years old.`);
}

// person1 introduces itself
introduce.call(person1); // Output: Hello, I'm Akshay, and I'm 25 years old.

// Using call() to make person2 introduce itself
introduce.call(person2); // Output: Hello, I'm Rohit, and I'm 30 years old.
